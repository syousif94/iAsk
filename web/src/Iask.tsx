/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t public/iask.glb --transform 
Files: public/iask.glb [570.63KB] > /Users/syousif/dev/iask-site/iask-transformed.glb [543.62KB] (5%)
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    AdjkxvMXIDEHBMM: THREE.Mesh;
    AwsQCWysocWlYzN: THREE.Mesh;
    drpRvcOgsocXGbn: THREE.Mesh;
    KXVnYLSfTdVnSOf: THREE.Mesh;
    nnqwwoLVdMJlHIF: THREE.Mesh;
    SRYqzKwamLGuEGm: THREE.Mesh;
    xtMgDHhPqFLAHyB: THREE.Mesh;
    yxqQUnbopbiRvZr: THREE.Mesh;
    IkoiNqATMVoZFKD: THREE.Mesh;
    rqgRAGHOwnuBypi: THREE.Mesh;
    pXBNoLiaMwsDHRF: THREE.Mesh;
    IykfmVvLplTsTEW: THREE.Mesh;
    DCLCbjzqejuvsqH: THREE.Mesh;
    WJwwVjsahIXbJpU: THREE.Mesh;
    wLfSXtbwRlBrwof: THREE.Mesh;
    YfrJNXgMvGOAfzz: THREE.Mesh;
    buRWvyqhBBgcJFo: THREE.Mesh;
    CfghdUoyzvwzIum: THREE.Mesh;
    MHfUXxLdYldKhVJ_0: THREE.Mesh;
    pvdHknDTGDzVpwc: THREE.Mesh;
    TvgBVmqNmSrFVfW: THREE.Mesh;
    wqbHSzWaUxBCwxY_0: THREE.Mesh;
    evAxFwhaQUwXuua: THREE.Mesh;
    USxQiqZgxHbRvqB: THREE.Mesh;
    vFwJFNASGvEHWhs: THREE.Mesh;
    DjdhycfQYjKMDyn: THREE.Mesh;
    vELORlCJixqPHsZ: THREE.Mesh;
    xXDHkMplTIDAXLN: THREE.Mesh;
    EbQGKrWAqhBHiMv: THREE.Mesh;
    usFLmqcyrnltBUr: THREE.Mesh;
  };
  materials: {
    eShKpuMNVJTRrgg: THREE.MeshStandardMaterial;
    xNrofRCqOXXHVZt: THREE.MeshStandardMaterial;
    PpwUTnTFZJXxCoE: THREE.MeshStandardMaterial;
    jlzuBkUzuJqgiAK: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    hUlRcbieVuIiOXG: THREE.MeshStandardMaterial;
    yQQySPTfbEJufve: THREE.MeshStandardMaterial;
    hiVunnLeAHkwGEo: THREE.MeshStandardMaterial;
    HGhEhpqSBZRnjHC: THREE.MeshStandardMaterial;
    yiDkEwDSyEhavuP: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    vhaEJjZoqGtyLdo: THREE.MeshStandardMaterial;
    yhcAXNGcJWCqtIS: THREE.MeshStandardMaterial;
    oZRkkORNzkufnGD: THREE.MeshStandardMaterial;
    bCgzXjHOanGdTFV: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    jpGaQNgTtEGkTfo: THREE.MeshStandardMaterial;
    dxCVrUCvYhjVxqy: THREE.MeshStandardMaterial;
    xdyiJLYTYRfJffH: THREE.MeshStandardMaterial;
    pIhYLPqiSQOZTjn: THREE.MeshStandardMaterial;
    MHFGNLrDQbTNima: THREE.MeshStandardMaterial;
    KSIxMqttXxxmOYl: THREE.MeshStandardMaterial;
    mcPrzcBUcdqUybC: THREE.MeshStandardMaterial;
    RJoymvEsaIItifI: THREE.MeshStandardMaterial;
    ujsvqBWRMnqdwPx: THREE.MeshStandardMaterial;
    zFdeDaGNRwzccye: THREE.MeshStandardMaterial;
    pIJKfZsazmcpEiU: THREE.MeshStandardMaterial;
    TBLSREBUyLMVtJa: THREE.MeshStandardMaterial;
    sxNzrmuTqVeaXdg: THREE.MeshStandardMaterial;
  };
  animations: [];
};

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/iask-transformed.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.AdjkxvMXIDEHBMM.geometry}
        material={materials.eShKpuMNVJTRrgg}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.AwsQCWysocWlYzN.geometry}
        material={materials.xNrofRCqOXXHVZt}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.drpRvcOgsocXGbn.geometry}
        material={materials.PpwUTnTFZJXxCoE}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.KXVnYLSfTdVnSOf.geometry}
        material={materials.jlzuBkUzuJqgiAK}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.nnqwwoLVdMJlHIF.geometry}
        material={materials.PaletteMaterial001}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.SRYqzKwamLGuEGm.geometry}
        material={materials.PaletteMaterial002}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.xtMgDHhPqFLAHyB.geometry}
        material={materials.hUlRcbieVuIiOXG}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.yxqQUnbopbiRvZr.geometry}
        material={materials.yQQySPTfbEJufve}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.IkoiNqATMVoZFKD.geometry}
        material={materials.hiVunnLeAHkwGEo}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.rqgRAGHOwnuBypi.geometry}
        material={materials.HGhEhpqSBZRnjHC}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.pXBNoLiaMwsDHRF.geometry}
        material={materials.yiDkEwDSyEhavuP}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.IykfmVvLplTsTEW.geometry}
        material={materials.PaletteMaterial003}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.DCLCbjzqejuvsqH.geometry}
        material={materials.vhaEJjZoqGtyLdo}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.WJwwVjsahIXbJpU.geometry}
        material={materials.yhcAXNGcJWCqtIS}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.wLfSXtbwRlBrwof.geometry}
        material={materials.oZRkkORNzkufnGD}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.YfrJNXgMvGOAfzz.geometry}
        material={materials.bCgzXjHOanGdTFV}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.buRWvyqhBBgcJFo.geometry}
        material={materials.PaletteMaterial004}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.CfghdUoyzvwzIum.geometry}
        material={materials.jpGaQNgTtEGkTfo}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.MHfUXxLdYldKhVJ_0.geometry}
        material={materials.dxCVrUCvYhjVxqy}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.pvdHknDTGDzVpwc.geometry}
        material={materials.xdyiJLYTYRfJffH}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.TvgBVmqNmSrFVfW.geometry}
        material={materials.pIhYLPqiSQOZTjn}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.wqbHSzWaUxBCwxY_0.geometry}
        material={materials.MHFGNLrDQbTNima}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.evAxFwhaQUwXuua.geometry}
        material={materials.KSIxMqttXxxmOYl}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.USxQiqZgxHbRvqB.geometry}
        material={materials.mcPrzcBUcdqUybC}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.vFwJFNASGvEHWhs.geometry}
        material={materials.RJoymvEsaIItifI}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.DjdhycfQYjKMDyn.geometry}
        material={materials.ujsvqBWRMnqdwPx}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.vELORlCJixqPHsZ.geometry}
        material={materials.zFdeDaGNRwzccye}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.xXDHkMplTIDAXLN.geometry}
        material={materials.pIJKfZsazmcpEiU}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.EbQGKrWAqhBHiMv.geometry}
        material={materials.TBLSREBUyLMVtJa}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.usFLmqcyrnltBUr.geometry}
        material={materials.sxNzrmuTqVeaXdg}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload('/iask-transformed.glb');
